# DO NOT EDIT. This file was automatically generated by generate_prose_mirror_classes.py.
from typing import Any, List, Literal, Optional, Union

from pydantic import BaseModel

# Node group unions for convenience

InlineNode = Union["HardbreakNode", "TextNode"]
BlockNode = Union[
    "ParagraphNode",
    "BlockquoteNode",
    "BulletlistNode",
    "CodeblockNode",
    "HeadingNode",
    "HorizontalruleNode",
    "OrderedlistNode",
    "ImageNode",
]
ListNode = Union["BulletlistNode", "OrderedlistNode"]


class ParagraphNode(BaseModel):
    type: Literal["paragraph"] = "paragraph"
    content: Optional[List["InlineNode"]] = None


class BlockquoteNode(BaseModel):
    type: Literal["blockquote"] = "blockquote"
    content: Optional[List["BlockNode"]] = None


class BulletlistNode(BaseModel):
    type: Literal["bulletList"] = "bulletList"
    content: Optional[List["ListitemNode"]] = None


class CodeblockNodeAttrs(BaseModel):
    language: Optional[Any] = None


class CodeblockNode(BaseModel):
    type: Literal["codeBlock"] = "codeBlock"
    attrs: CodeblockNodeAttrs = CodeblockNodeAttrs()
    content: Optional[List["TextNode"]] = None


class DocNode(BaseModel):
    type: Literal["doc"] = "doc"
    content: Optional[List["BlockNode"]] = None


class HardbreakNode(BaseModel):
    type: Literal["hardBreak"] = "hardBreak"


class HeadingNodeAttrs(BaseModel):
    level: int = 1


class HeadingNode(BaseModel):
    type: Literal["heading"] = "heading"
    attrs: HeadingNodeAttrs = HeadingNodeAttrs()
    content: Optional[List["InlineNode"]] = None


class HorizontalruleNode(BaseModel):
    type: Literal["horizontalRule"] = "horizontalRule"


class ListitemNode(BaseModel):
    type: Literal["listItem"] = "listItem"
    content: Optional[Union["ParagraphNode", List["BlockNode"]]] = None


class OrderedlistNodeAttrs(BaseModel):
    start: int = 1
    type: Optional[Any] = None


class OrderedlistNode(BaseModel):
    type: Literal["orderedList"] = "orderedList"
    attrs: OrderedlistNodeAttrs = OrderedlistNodeAttrs()
    content: Optional[List["ListitemNode"]] = None


class TextNode(BaseModel):
    type: Literal["text"] = "text"
    text: str


class ImageNodeAttrs(BaseModel):
    src: Optional[Any] = None
    alt: Optional[Any] = None
    title: Optional[Any] = None


class ImageNode(BaseModel):
    type: Literal["image"] = "image"
    attrs: ImageNodeAttrs = ImageNodeAttrs()
